{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAQC,KACtB,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACHH,EACPF,EAAQ,C,SAACH,E,MAASC,IAElBG,EAAS,C,SAACJ,E,MAASC,GAAO,GACrBA,EAAM,G,CA/BEQ,SAASC,cAAc,mBAGjCC,iBAAiB,SAAUC,IAChCA,EAAGC,iBACH,IAAIC,EAAW,EACXC,EAAQC,SAASP,SAASC,cAAc,kBAAkBO,QAAU,EACxE,MAAMC,EAAOF,SAASP,SAASC,cAAc,iBAAiBO,QAAU,EAClEE,EAASH,SAASP,SAASC,cAAc,mBAAmBO,OACrE,IAAK,IAAIG,EAAQ,EAAGA,EAAQD,EAAQC,IAEjCrB,EAAce,EAAUC,GACvBM,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEzEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAEtEc,GAASG,EACTJ,GAAY,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\n\n  const submitBtn = document.querySelector('[type=\"submit\"]');\n  \n\nsubmitBtn.addEventListener('click', (ev)=>{\n     ev.preventDefault();\n     let position = 1;\n     let delay = parseInt(document.querySelector('[name=\"delay\"]').value) || 0;\n     const step = parseInt(document.querySelector('[name=\"step\"]').value) || 0;\n     const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n  for (let index = 0; index < amount; index++) {\n    \n     createPromise(position, delay)\n     .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n     delay += step;\n     position += 1;\n  }  \n})\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve,rejected) => {\n        const shouldResolve = Math.random() > 0.3;\n      setTimeout(()=>{  \n          if (shouldResolve) {\n       resolve({position,delay})\n        } else {\n       rejected({position,delay})\n        }}, delay)   \n})\n};\n\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","rejected","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","ev","preventDefault","position1","delay1","parseInt","value","step","amount","index","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.495bdca3.js.map"}