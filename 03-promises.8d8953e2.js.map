{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAuBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAQC,KACtB,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACHH,EACPF,EAAQ,C,SAACH,E,MAASC,IAElBG,EAAS,C,SAACJ,E,MAASC,GAAO,GACrBA,EAAM,G,CA7BhBQ,UAAYC,SAASC,cAAc,mBAErCF,UAAUG,iBAAiB,SAAUC,IAChCA,EAAGC,iBACH,IAAIC,EAAQC,SAASN,SAASC,cAAc,kBAAkBM,OAC9D,MAAMC,EAAOF,SAASN,SAASC,cAAc,iBAAiBM,OACxDE,EAASH,SAASN,SAASC,cAAc,mBAAmBM,OACrE,IAAK,IAAIG,EAAQ,EAAGA,EAAQD,EAAQC,IAAS,CAC3C,IAAIC,EAAW,EACdtB,EAAcsB,EAAUN,GACvBO,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAiBC,MAAU,IAExEc,GAASG,EACTG,GAAW,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\n\n  submitBtn = document.querySelector('[type=\"submit\"]');\n\nsubmitBtn.addEventListener('click', (ev)=>{\n     ev.preventDefault();\n     let delay = parseInt(document.querySelector('[name=\"delay\"]').value);\n     const step = parseInt(document.querySelector('[name=\"step\"]').value);\n     const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n  for (let index = 0; index < amount; index++) {\n    let position = 1;\n     createPromise(position, delay)\n     .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n     delay += step;\n     position +=1;\n  }  \n})\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve,rejected) => {\n        const shouldResolve = Math.random() > 0.3;\n      setTimeout(()=>{  \n          if (shouldResolve) {\n       resolve({position,delay})\n        } else {\n       rejected({position,delay})\n        }}, delay)   \n})\n};\n\n\n\n\n\n\n\n\n\n\n\n\n// createPromise()\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n//   function createPromise(position, delay) {\n//     return new Promise((resolve, reject) => {\n//       setTimeout(() => {\n//         const result = { position, delay };\n//         if (delay > 2) {\n//           reject(`Проміс #${position} відхилений, бо затримка більше 2 секунд`);\n//         } else {\n//           resolve(result);\n//         }\n//       }, delay * 1000);\n//     });\n//   }\n  \n//   const form = document.querySelector('form');\n//   form.addEventListener('submit', (event) => {\n//     event.preventDefault();\n//     const amount = parseInt(document.querySelector('#amount').value);\n//     const delay = parseInt(document.querySelector('#delay').value);\n//     const step = parseInt(document.querySelector('#step').value);\n//     let position = 1;\n//     for (let i = 0; i < amount; i++) {\n//       createPromise(position, delay).then(result => {\n//         console.log(`Проміс #${result.position} виконаний зі затримкою ${result.delay} сек`);\n//       }).catch(error => {\n//         console.log(error);\n//       });\n//       position += step;\n//       delay += step;\n//     }\n//   });\n  "],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","rejected","shouldResolve","Math","random","setTimeout","submitBtn","document","querySelector","addEventListener","ev","preventDefault","delay1","parseInt","value","step","amount","index","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.8d8953e2.js.map"}